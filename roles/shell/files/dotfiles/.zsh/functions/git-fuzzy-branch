git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return 1

local _accept=1
local _input
local _key
local _branch
local _location

while {
    read -r _input
    read -r _key
    read -r _branch
} < <(git branch --all --color=always | grep --color=yes -vE '(^|/)HEAD' | fzf \
    --header='enter: checkout | C-n: create | C-d: delete | C-p: push' \
    --query="${_input:-}" \
    --print-query \
    --expect='enter,ctrl-n,ctrl-d,ctrl-p,ctrl-x'
)
do
    _branch=${_branch% -> *}
    _branch=${_branch#* }

    if grep -qE "^remotes/" <<<"$_branch"; then
        _location='remote'
        _branch=${_branch#remotes/}
    else
        _location='local'
    fi

    case "$_key:$_location" in
        enter:remote)
            BUFFER=" git checkout --track $_branch"
            ;;
        enter:local)
            BUFFER=" git checkout $_branch"
            ;;
        ctrl-n:*)
            [ -z "$_input" ] && continue
            BUFFER=" git branch $_input"
            ;;
        ctrl-d:remote)
            BUFFER=" git push ${_branch%%/*} :${_branch#*/}"
            ;;
        ctrl-d:local)
            BUFFER=" git branch -D $_branch"
            ;;
        ctrl-p:remote)
            continue
            ;;
        ctrl-p:local)
            BUFFER=" git push -u $(git remote | head -1) $_branch"
            ;;
        ctrl-x:*)
            _accept=$(( 1 - _accept ))
            continue
            ;;
    esac

    (( _accept )) && zle accept-line
    return
done
